generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Channel {
  id          BigInt    @id @default(autoincrement())
  inserted_at DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  slug        String    @unique
  created_by  String    @db.Uuid
  user        User      @relation(fields: [created_by], references: [id])
  messages    Message[]

  @@map("channels")
}

model Message {
  id          BigInt   @id @default(autoincrement())
  inserted_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  message     String?
  user_id     String   @db.Uuid
  channel_id  BigInt
  channels    Channel  @relation(fields: [channel_id], references: [id])
  user        User     @relation(fields: [user_id], references: [id])

  @@map("messages")
}

model RolePermission {
  id         BigInt         @id @default(autoincrement())
  role       app_role
  permission app_permission

  @@unique([role, permission], name: "role_permissions_role_permission_key")
  @@map("role_permissions")
}

model UserRole {
  id      BigInt   @id @default(autoincrement())
  user_id String   @db.Uuid
  role    app_role
  user    User     @relation(fields: [user_id], references: [id])

  @@unique([user_id, role], name: "user_roles_user_id_role_key")
  @@map("user_roles")
}

model User {
  id         String       @id @db.Uuid
  username   String?
  status     user_status? @default(OFFLINE)
  channels   Channel[]
  messages   Message[]
  user_roles UserRole[]

  @@map("users")
}

enum app_permission {
  channels_delete @map("channels.delete")
  messages_delete @map("messages.delete")
}

enum app_role {
  admin
  moderator
}

enum user_status {
  ONLINE
  OFFLINE
}
