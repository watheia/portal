# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

cache:
  paths:
    - .yarn
    - node_modules

stages: # List of stages for jobs, and their order of execution
  - warmup
  - build
  - test
  - deploy

install: # This job runs in the build stage, which runs first.
  stage: warmup
  script:
    - yarn install
    - export

build: # This job runs in the build stage, which runs first.
  stage: build
  needs: [install]
  script:
    - yarn nx run-many
      --target=build
      --all=true
      --configuration=production
      --verbose=true

test: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  needs: [install]
  script:
    - yarn nx run-many
      --target=test
      --all=true
      --verbose=true
      --coverage

lint: # This job also runs in the test stage.
  needs: [install]
  stage: test # It can run at the same time as unit-test-job (in parallel).
  script:
    - yarn nx run-many
      --target=lint
      --all=true

e2e: # This job also runs in the test stage.
  needs: [install, build]
  stage: test # It can run at the same time as unit-test-job (in parallel).
  script:
    - yarn nx run-many
      --target=e2e
      --all=true
      --verbose=true

deploy: # This job also runs in the test stage.
  needs: [install, build]
  stage: deploy # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "TODO not implemented"
# stages:
#   - build
#   - test

# build:
#   stage: build
#   image: node:14-alpine
#   script:
#     - yarn install
#     - yarn nx run-many
#       --target=build
#       --all=true
#       --configuration=production
#       --verbose=true

# test:
#   image: node:14-alpine
#   stage: test
#   needs: [build]
#   script:
#     - yarn install
#     - yarn nx run-many
#       --target=test
#       --all=true
#       --verbose=true
#       --coverage

# lint:
#   image: node:14-alpine
#   stage: test
#   needs: [build]
#   script:
#     - yarn install
#     - yarn nx run-many
#       --target=lint
#       --all=true
#       --verbose=true
